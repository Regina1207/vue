Vue：指令
    概念：vue中的指令，可以快速帮助我们进行页面数据的绑定，循环，嵌套等等（）为了方便使用template模板
   
    v-model:用于Input，文本域等输入框内指令，更能体现数据双向绑定原理，只是一个指令，多用于表单
    
    v-for:循环，用于循环DOM结构，用在template，数据的多少决定了循环的次数，循环自身及所有子元素
        循环的元素必须要添加key值，为了安全，性能（不让循环过的元素再次循环，再次加载）
    <li v-for="(item,index) in arr" : key="index">{{item}}</li>
    index:索引
    item：数据内容
    key：唯一标识，减少再次循环

    v-bind:用于给template模板元素绑定属性  把v-bind简写成 :  
    <li v-for="(item,index) in arr" v-bind:key="index">{{item}}</li>
   
    v-on：用于绑定事件（不管什么事件）   简写：@click
    onclick：间接绑定（事件委托）
    bind：直接绑定

    v-cloak:原理：display:none
        解决vue项目刷新时，花括号闪烁问题，数据没有准备好之前，任何东西都display:none
        数据准备好了，display:none取消了，此指令加载html页面中的id="app"的元素上
    
        vue1.0:v-cloak加在body上面

    v-pre：跳过当前元素及子元素的Mustache编译，提高编译速度
    v-if：判断条件，用来显示或者隐藏元素的指令
    v-else：用来判断条件的，必须跟在v-if之后，不能单独使用v-else
    v-else-if：用于复杂的，多个条件判断，用的不多
        注意：如果三个指令同时存在，v-if必须是第一位，v-else必须是最后一位

    v-show：用于显示或者隐藏元素的指令
    v-text：用于给元素绑定文本值（只能写文本值）
    v-html：用于给元素绑定文本值或者子元素及文本值
    v-slot：插槽指令，有三种，用于动态的显示内容（占位符），有动态数据显示动态数据
            没有动态数据，显示默认数据
                    匿名插槽：没有名字的插槽（父组件嵌套子组件）（子组件需要一个slot插槽标签，如果里面有内容，默认显示）
                                                            （子组件标签内有内容，则先显示当前内容）
                    具名插槽：有名字的插槽
                    作用域插槽：有作用域的插槽（最难的），同样的数据，不同的显示风格
            插槽：slot
                匿名插槽：
                    如果子组件的slot标签内有默认数据，而且父组件内的子组件标签内没有内容，
                    则显示子组件slot标签内的默认内容，如果父组件内的子组件标签内有内容，则
                    显示当前内容
    v-once：用来只加载一次元素

面试题：
    请问v-if和v-show，你经常使用哪个？使用哪个更好一些？为什么？
        v-show：加载了文档流，存在于document文档里面，控制css，display:none，
        v-if：算法，逻辑算法（条件判断）
        经常使用v-show即可（简单）